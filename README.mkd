# skeleton-geda-project

`skeleton-geda-project` is meant to serve as a batteries-included
foundation for a [gEDA](http://www.geda-project.org/) project.

To begin, run the `init.sh` script. This will prompt you for your name
of your new project and seed the required configuration.

Open `NAME.sch` with `gschem`. It is important that `gschem` is
started from the root directory of the project. Draw your schematic.

When the schematic is largely complete you can run `make pcb` to seed
the PCB layout. Open the `NAME.pcb` in the `pcb` tool. 

Feel free to overwrite this readme when you are done with it. 
`skeleton-geda-project` is available at
<http://www.github.com/bgamari/skeleton-geda-project>.

## Requirements

This requires a complete gEDA installation. On Ubuntu, the required
packages can be easily installed with `apt-get`,

    apt-get install geda geda-netlist geda-utils pcb


## Makefile rules

The included Makefile has a variety of useful rules,

 * `tsymbols`: Generate tragesym symbols
 * `check-symbols`: Run `gsymcheck` on the generated symbols
 * `pcb`: Update the pcb file and netlist
 * `$NAME.pdf`: Generate a PDF of the PCB layout
 * `$NAME.ps`: Generate a Postscript of the PCB layout
 * `$NAME.bom`: Generate a textual bill of materials
 * `gerbers.zip`: Generate a Zip file containing Gerbers of the layout
 * `osh-park-gerbers.zip`: Generate a Zip file containing Gerbers appropriate to send to [OSH Park](http://www.oshpark.com/)

## Where can I find symbols/footprints?

If you are in need of a symbol or footprint, Google is always a
reasonable place to start. Moreover, there are several repositories of
high-quality symbols/footprints,

 * [gedasymbols.org](http://www.gedasymbols.org/)
 * [luciani.org](http://www.luciani.org/geda/pcb/pcb-footprint-list.html)
 * 
 
## How do I make symbols?

There are several ways to create `gschem` symbols. For most cases,
`tragesym` is the easiest way to compose a symbol. However, in cases
where more control over layout and presentation is needed, `gschem` is
preferred.

### With `tragesym`
The easiest way to make a symbol is with the excellent `tragesym` utility.
You will find an example `tragesym` description in the
`sym/l79lxx.tsym`. Simply copy this file and update the `name`,
`device`, `footprint`, `description`, and `author` fields in addition
to the pin definitions.

### With `gschem`

One can also create symbols using `gschem` by creating a new
schematic, drawing the symbol and pins, and saving in the `sym/`
directory with a `.sym` file extension.


## How do I make footprints?

There are several tools for generating footprints. See the
[gEDA wiki](http://wiki.geda-project.org/geda:pcb_footprints) for more details.



# Other resources

 * [gEDA wiki](http://wiki.geda-project.org/)


